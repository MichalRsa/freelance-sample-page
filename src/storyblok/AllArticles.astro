---
import { storyblokEditable, useStoryblokApi } from "@storyblok/astro";
import ArticleCard from "../components/ArticleCard.astro";
import isPreview from "../utils/isPreview";
import SectionWrapper from "../components/SectionWrapper.astro";
import type { ArticleStoryblok } from "component-types-sb";
const { blok, language } = Astro.props;
const storyblokApi = useStoryblokApi();
const { data } = await storyblokApi.get(`cdn/stories`, {
  version: isPreview() ? "draft" : "published",
  starts_with: "events/",
  content_type: "article",
  language,
});

const articles: ArticleStoryblok[] = data.stories;

function checkDateStatus(dateString: string) {
  const date = new Date(dateString);

  const today = new Date();
  today.setHours(0, 0, 0, 0);
  if (date < today) {
    return "past";
  } else if (date > today) {
    return "future";
  } else {
    return "all";
  }
}

const articlesList =
  blok.type === "all"
    ? articles
    : articles?.filter(
        (article) =>
          checkDateStatus(article.content.date.split(" ")[0] as string) ===
          blok.type,
      );
---

<SectionWrapper
  bgColor="ternary"
  {...storyblokEditable(blok)}
  animation="animationHidden animationBottom"
>
  <ul
    class="m-auto grid max-w-3xl grid-cols-1 justify-items-center gap-6 lg:grid-cols-2"
  >
    {
      articlesList.length &&
        articlesList.map((article) => {
          article.content.slug = article.slug;
          return (
            <li class="w-full max-lg:max-w-80 lg:w-80">
              <ArticleCard language={language} article={article.content} />
            </li>
          );
        })
    }
  </ul>
</SectionWrapper>
