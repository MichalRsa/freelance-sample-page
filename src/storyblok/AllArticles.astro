---
import { storyblokEditable, useStoryblokApi } from "@storyblok/astro";
import ArticleCard from "../components/ArticleCard.astro";
import isPreview from "../utils/isPreview";
import SectionWrapper from "../components/SectionWrapper.astro";
const { blok, language } = Astro.props;
const storyblokApi = useStoryblokApi();
const { data } = await storyblokApi.get(`cdn/stories`, {
  version: isPreview() ? "draft" : "published",
  starts_with: "events/",
  content_type: "article",
  language,
});

interface IArticle {
  slug: string;
  content: {
    title: string;
    intro: string;
    slug: string;
    image: {
      filename: string;
      alt: string;
    };
  };
}

const articles: IArticle[] = data.stories;
---

<SectionWrapper
  bgColor="ternary"
  {...storyblokEditable(blok)}
  animation="animationHidden animationBottom"
>
  <ul
    class="m-auto grid max-w-3xl grid-cols-1 justify-items-center gap-6 lg:grid-cols-2"
  >
    {
      articles?.length &&
        articles.map((article) => {
          article.content.slug = article.slug;
          return (
            <li class="w-full max-lg:max-w-80 lg:w-80">
              <ArticleCard language={language} article={article.content} />
            </li>
          );
        })
    }
  </ul>
</SectionWrapper>
