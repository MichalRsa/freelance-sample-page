---
import { useStoryblokApi } from "@storyblok/astro";
import StoryblokComponent from "@storyblok/astro/StoryblokComponent.astro";
import BaseLayout from "../layouts/BaseLayout.astro";
import parseUrl from "../utils/parseUrl";
import isPreview from "../utils/isPreview";
import generateStaticPaths from "../utils/generateStaticPaths";
import type { PageStoryblok } from "../../component-types-sb.d.ts";

export async function getStaticPaths() {
  //We have moved all the code to a generateStaticPaths() function.
  return await generateStaticPaths();
}

const params = Astro.params;
let props = isPreview() ? parseUrl(params?.slug) : Astro.props;
const { slug, language, langSwitch } = props;
const storyblokApi = useStoryblokApi();
const { data } = await storyblokApi.get(
  `cdn/stories/${slug === undefined ? "home" : slug}`,
  {
    version: isPreview() ? "draft" : "published",
    resolve_relations: ["popular-articles.articles"],
    resolve_links: "url",
    language,
  },
);
const story = data.story as PageStoryblok;
---

<BaseLayout langSwitch={langSwitch} language={language}>
  <StoryblokComponent language={language} blok={story.content} />
</BaseLayout>
